{"version":3,"sources":["components/BulkSMSContact.js","components/Spinner.js","components/BulkSMSFile.js","components/BulkSMSHeader.js","components/BulkSMSTo.js","components/BulkSMSMessage.js","components/BulkSMSSenderId.js","components/BulkSMSPopup.js","components/BulkSMS.js","components/Layout.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["BulkSMSContact","this","nameInput","focus","className","props","contacts","map","contact","i","key","onClick","handleClick","id","onSubmit","handleAddContact","type","name","placeholder","onChange","handleChange","value","ref","input","style","hasErr","color","message","Component","withRouter","Spinner","BulkSMSFile","length","fontSize","fontWeight","extracting","file","size","toFixed","extract","htmlFor","handleChangeFile","errMessage","BulkSMSHeader","classesOne","classesTwo","mode","push","join","setModeNormal","setModeFile","BulkSMSTo","removeNumber","fileErrMessage","clearContacts","BulkSMSMessage","BulkSMSSenderId","senderId","BulkSMSPopup","loading","messageErr","sendingErr","sendingMessage","BulkSMS","state","open","sending","messageWarning","senderErrMessage","sendErrMessage","closePopup","setState","sendMessage","data","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","status","catch","err","e","target","files","fileExtension","split","fileExtensionName","toLowerCase","includes","setTimeout","numbers","XLXS","rows","j","number","num","startsWith","filter","test","preventDefault","Layout","children","Navigation","to","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.1e2a385d.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass BulkSMSContact extends Component {\r\n  componentDidMount() {\r\n    this.nameInput.focus();\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"bulksms__to-contact-container\">\r\n          <div className=\"bulksms__to-contact\">\r\n            <Fragment>\r\n              {this.props.contacts.map((contact, i) => {\r\n                return (\r\n                  <p key={i + 1} className=\"bulksms__to-contact-number\">\r\n                    {contact}\r\n                    <i\r\n                      onClick={this.props.handleClick}\r\n                      id={`${contact}`}\r\n                      className=\"icofont-delete\"\r\n                    ></i>\r\n                  </p>\r\n                );\r\n              })}\r\n            </Fragment>\r\n            <form\r\n              className=\"bulksms__to-contact-form\"\r\n              onSubmit={this.props.handleAddContact}\r\n            >\r\n              <input\r\n                type=\"tel\"\r\n                name=\"contact\"\r\n                placeholder=\"number\"\r\n                onChange={this.props.handleChange}\r\n                value={this.props.contact}\r\n                ref={(input) => {\r\n                  this.nameInput = input;\r\n                }}\r\n              />\r\n              <button>Add</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <p\r\n          className=\"bulksms__to-contact-message\"\r\n          style={\r\n            this.props.hasErr ? { color: \"#fa392b\" } : { color: \"#05c568\" }\r\n          }\r\n        >\r\n          {this.props.message}\r\n        </p>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BulkSMSContact);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return <div className=\"spinner\"></div>;\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nclass BulkSMSFile extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"bulksms__to-file-contact\">\r\n          <Fragment>\r\n            {this.props.contacts.length > 0 ? (\r\n              <div className=\"bulksms__to-file-contact-container\">\r\n                {this.props.contacts.map((contact, i) => {\r\n                  return (\r\n                    <p\r\n                      key={i + 1}\r\n                      className=\"bulksms__to-file-contact-number\"\r\n                      style={{\r\n                        fontSize: \"1.2rem\",\r\n                        color: \"#212121\",\r\n                        fontWeight: 400,\r\n                      }}\r\n                    >\r\n                      {contact}\r\n                      <i\r\n                        id={`${contact}`}\r\n                        onClick={this.props.handleClick}\r\n                        className=\"icofont-delete\"\r\n                      ></i>\r\n                    </p>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : null}\r\n          </Fragment>\r\n\r\n          {!this.props.extracting ? (\r\n            <Fragment>\r\n              {this.props.file ? (\r\n                <div className=\"bulksms__to-file-contact-info\">\r\n                  <i className=\"icofont-file-document\"></i>\r\n                  <p>File : {this.props.file.name}</p>\r\n                  <p>Size : {(this.props.file.size / 1024).toFixed(2)} KB</p>\r\n                  <button onClick={this.props.extract}>Extract</button>\r\n                </div>\r\n              ) : (\r\n                <Fragment>\r\n                  {this.props.contacts.length > 0 ? null : (\r\n                    <Fragment>\r\n                      <p>Choose an excel file to upload</p>\r\n                      <form className=\"bulksms__to-file-form\">\r\n                        <label htmlFor=\"file\">\r\n                          <p>\r\n                            <i className=\"icofont-upload-alt\"></i>\r\n                            Browse\r\n                          </p>\r\n                        </label>\r\n                        <input\r\n                          type=\"file\"\r\n                          name=\"file\"\r\n                          id=\"file\"\r\n                          onChange={this.props.handleChangeFile}\r\n                        />\r\n                      </form>\r\n                    </Fragment>\r\n                  )}\r\n                </Fragment>\r\n              )}\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          {this.props.extracting ? (\r\n            <Fragment>\r\n              <Spinner />\r\n              <p className=\"bulksms__to-contact-message\">\r\n                Extracting contacts...\r\n              </p>\r\n            </Fragment>\r\n          ) : null}\r\n          <p\r\n            className=\"bulksms__to-contact-message\"\r\n            style={\r\n              this.props.hasErr ? { color: \"#fa392b\" } : { color: \"#05c568\" }\r\n            }\r\n          >\r\n            {this.props.errMessage}\r\n          </p>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BulkSMSFile);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass BulkSMSHeader extends Component {\r\n  render() {\r\n    let classesOne = [\"bulksms__to-navigation-item\"];\r\n    let classesTwo = [\"bulksms__to-navigation-item\"];\r\n    if (this.props.mode === \"normal\")\r\n      classesOne.push(\"bulksms__to-navigation-item-active\");\r\n    if (this.props.mode === \"file\")\r\n      classesTwo.push(\"bulksms__to-navigation-item-active\");\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"bulksms__to-heading-wrapper\">\r\n          <p className=\"bulksms__to-heading\">Send campaign SMS</p>\r\n        \r\n        </div>\r\n\r\n        <div className=\"bulksms__to-navigation\">\r\n          <div\r\n            className={classesOne.join(\" \")}\r\n            onClick={this.props.setModeNormal}\r\n          >\r\n            <i className=\"icofont-pen-alt-2\"></i>\r\n            <p>Enter Number</p>\r\n          </div>\r\n          <div\r\n            className={classesTwo.join(\" \")}\r\n            onClick={this.props.setModeFile}\r\n          >\r\n            <i className=\"icofont-upload-alt\"></i>\r\n            <p>Number from file</p>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BulkSMSHeader);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport BulkSMSContact from \"./BulkSMSContact\";\r\nimport BulkSMSFile from \"./BulkSMSFile\";\r\nimport BulkSMSHeader from \"./BulkSMSHeader\";\r\n\r\nclass BulkSMSTo extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <section className=\"bulksms__to\">\r\n          <BulkSMSHeader\r\n            mode={this.props.mode}\r\n            setModeNormal={this.props.setModeNormal}\r\n            setModeFile={this.props.setModeFile}\r\n            contacts={this.props.contacts}\r\n          />\r\n          {this.props.mode === \"normal\" ? (\r\n            <BulkSMSContact\r\n              handleAddContact={this.props.handleAddContact}\r\n              handleChange={this.props.handleChange}\r\n              contact={this.props.contact}\r\n              contacts={this.props.contacts}\r\n              message={this.props.message}\r\n              hasErr={this.props.hasErr}\r\n              handleClick={this.props.removeNumber}\r\n            />\r\n          ) : null}\r\n          {this.props.mode === \"file\" ? (\r\n            <BulkSMSFile\r\n              hasErr={this.props.hasErr}\r\n              handleChangeFile={this.props.handleChangeFile}\r\n              file={this.props.file}\r\n              errMessage={this.props.fileErrMessage}\r\n              extract={this.props.extract}\r\n              extracting={this.props.extracting}\r\n              contacts={this.props.contacts}\r\n              handleClick={this.props.removeNumber}\r\n            />\r\n          ) : null}\r\n\r\n             {this.props.contacts.length > 0 ? (\r\n              <div className=\"bulksms__clear-btn-wrapper\">\r\n                <button\r\n                  className=\"bulksms__clear-btn\"\r\n                  onClick={this.props.clearContacts}\r\n                >\r\n                  Clear all contacts\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n        </section>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BulkSMSTo);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass BulkSMSMessage extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"bulksms__message\">\r\n          <p className=\"bulksms__message-heading\">The text of your message</p>\r\n          <div className=\"bulksms__message-container\">\r\n            <textarea\r\n              name=\"message\"\r\n              placeholder=\"Type your message here\"\r\n              value={this.props.message}\r\n              onChange={this.props.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <p\r\n            className=\"bulksms__message-heading\"\r\n            style={\r\n              this.props.hasErr\r\n                ? { color: \"#cf7703\", fontSize: \"12px\", fontWeight: \"400\" }\r\n                : { color: \"#212121\", fontSize: \"12px\", fontWeight: \"400\" }\r\n            }\r\n          >\r\n            {this.props.errMessage}\r\n          </p>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BulkSMSMessage);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass BulkSMSSenderId extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"bulksms__senderid\">\r\n        <p className=\"bulksms__senderid-heading\">Sender ID</p>\r\n        <input\r\n          name=\"senderId\"\r\n          placeholder=\"Sender ID\"\r\n          type=\"tel\"\r\n          value={this.props.senderId}\r\n          onChange={this.props.handleChange}\r\n        />\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BulkSMSSenderId);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nclass BulkSMSPopup extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"bulksms__popup\">\r\n        <div className=\"bulksms__popup-message-box\">\r\n          {this.props.loading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <Fragment>\r\n              {this.props.messageErr ? null : (\r\n                <i className=\"icofont-ui-messaging\"></i>\r\n              )}\r\n            </Fragment>\r\n          )}\r\n          {this.props.messageErr ? (\r\n            <i\r\n              className=\"icofont-exclamation-tringle\"\r\n              style={{ color: \"#fa392b\" }}\r\n            ></i>\r\n          ) : null}\r\n          <p\r\n            style={\r\n              this.props.sendingErr\r\n                ? { color: \"#fa392b\" }\r\n                : { color: \"#212121\" }\r\n            }\r\n          >\r\n            {this.props.sendingMessage}\r\n          </p>\r\n          {this.props.loading ? null : (\r\n            <button onClick={this.props.handleClick}>Close</button>\r\n          )}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BulkSMSPopup);\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { withRouter } from \"react-router\"\r\nimport XLXS from \"read-excel-file\"\r\nimport BulkSMSTo from \"./BulkSMSTo\"\r\nimport BulkSMSMessage from \"./BulkSMSMessage\"\r\nimport BulkSMSSenderId from \"./BulkSMSSenderId\"\r\nimport BulkSMSPopup from \"./BulkSMSPopup\"\r\n\r\nclass BulkSMS extends Component {\r\n\tstate = {\r\n\t\topen: false,\r\n\t\tsending: false,\r\n\t\tmode: \"normal\",\r\n\t\thasErr: false,\r\n\t\terrMessage: \"\",\r\n\t\tmessageWarning: \"\",\r\n\t\tmessageErr: false,\r\n\t\tsenderErrMessage: \"\",\r\n\t\tsendErrMessage: \"\",\r\n\t\tsendingMessage: \"\",\r\n\t\tsendingErr: false,\r\n\t\tloading: false,\r\n\t\tfile: null,\r\n\t\tfileErrMessage: \"\",\r\n\t\textracting: false,\r\n\t\tcontact: \"\",\r\n\t\tmessage: \"\",\r\n\t\tcontacts: [],\r\n\t\tsenderId: \"\",\r\n\t}\r\n\r\n\tclosePopup = () => {\r\n\t\tthis.setState({ open: false, messageErr: false })\r\n\t\tif (!this.state.messageErr) {\r\n\t\t\tthis.setState({\r\n\t\t\t\topen: false,\r\n\t\t\t\tcontacts: [],\r\n\t\t\t\tcontact: \"\",\r\n\t\t\t\tfile: \"\",\r\n\t\t\t\tsenderId: \"\",\r\n\t\t\t\tmessage: \"\",\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tsendMessage = () => {\r\n\t\tconst { contacts, senderId, message } = this.state\r\n\r\n\t\tif (contacts.length === 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsendErrMessage: \"No contacts to send message to!\",\r\n\t\t\t\thasErr: true,\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (!message || typeof message !== \"string\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsendErrMessage: \"Please write valid message with no special characters\",\r\n\t\t\t\thasErr: true,\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (message.length > 160) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsendErrMessage: \"Message cannot be more than 160 charactaers!\",\r\n\t\t\t\thasErr: true,\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!this.state.senderId) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsendErrMessage: \"Please Enter SenderID\",\r\n\t\t\t\thasErr: true,\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (contacts.length > 5000) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsendErrMessage: \"Contacts has exceeded 10,000 limits!\",\r\n\t\t\t\thasErr: true,\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\thasErr: false,\r\n\t\t\tsendErrMessage: \"\",\r\n\t\t})\r\n\t\tconst data = {\r\n\t\t\tcontacts,\r\n\t\t\tsenderId,\r\n\t\t\tmessage,\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tsending: true,\r\n\t\t\tloading: true,\r\n\t\t\topen: true,\r\n\t\t\tsendingMessage: \"Sending message...\",\r\n\t\t})\r\n\r\n\t\tfetch(\"/message\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsending: false,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\tmessageErr: data.status === \"success\" ? false : true,\r\n\t\t\t\t\tsendingMessage: data.message,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\tsending: false,\r\n\t\t\t\t\tmessageErr: true,\r\n\t\t\t\t\tsendingMessage: \"Error occured while sending message\",\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\thandleChangeFile = e => {\r\n\t\tthis.setState({ file: e.target.files[0] })\r\n\t}\r\n\r\n\textract = () => {\r\n\t\tthis.setState({ sendErrMessage: \"\" })\r\n\t\tconst { file } = this.state\r\n\t\tconst fileExtension = file.name.split(\".\")\r\n\t\tconst fileExtensionName = fileExtension[fileExtension.length - 1].toLowerCase()\r\n\r\n\t\tif (!file) {\r\n\t\t\tthis.setState({ fileErrMessage: \"Please upload a file\", hasErr: true })\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.setState({ fileErrMessage: \"\", hasErr: false })\r\n\r\n\t\tif (![\"xlsx\"].includes(fileExtensionName)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfileErrMessage: \"Upload a valid excel file! .xlsx\",\r\n\t\t\t\thasErr: true,\r\n\t\t\t\tfile: null,\r\n\t\t\t})\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({ fileErrMessage: \"\", hasErr: false })\r\n\t\t\t}, 3000)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet numbers = []\r\n\t\tthis.setState({ extracting: true })\r\n\t\tXLXS(file)\r\n\t\t\t.then(rows => {\r\n\t\t\t\tfor (var i = 0; i < rows.length; i++) {\r\n\t\t\t\t\tfor (var j = 0; j < rows[i].length; j++) {\r\n\t\t\t\t\t\tlet number = rows[i][j]\r\n\t\t\t\t\t\tnumbers.push(number)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnumbers = numbers.map(num => (`${num}`.startsWith(\"+\") ? num : `+${num}`))\r\n\t\t\t\tnumbers = numbers.filter(num => /^\\+[1-9]\\d{1,14}$/g.test(num))\r\n\t\t\t\tlet fileErrMessage = \"\"\r\n\t\t\t\tlet hasErr = false\r\n\r\n\t\t\t\tif (numbers.length === 0) {\r\n\t\t\t\t\thasErr = true\r\n\t\t\t\t\tfileErrMessage = \"No contacts found!\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (numbers.length > 5000) {\r\n\t\t\t\t\tfileErrMessage = \"Contacts has exeeded 10,000 limits\"\r\n\t\t\t\t\thasErr = false\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\textracting: false,\r\n\t\t\t\t\tfileErrMessage,\r\n\t\t\t\t\tfile: null,\r\n\t\t\t\t\tcontacts: [...numbers],\r\n\t\t\t\t\thasErr,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\thasErr: true,\r\n\t\t\t\t\terrMessage: \"Error extracting file!\",\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\tremoveNumber = e => {\r\n\t\tlet { contacts } = this.state\r\n\t\tcontacts = contacts.filter(id => id !== e.target.id)\r\n\t\tthis.setState({ contacts: [...contacts] })\r\n\t}\r\n\r\n\tsetModeFile = () => this.setState({ mode: \"file\", contacts: [], contact: \"\" })\r\n\tsetModeNormal = () => this.setState({ mode: \"normal\", contacts: [], contact: \"\" })\r\n\thandleChange = e => {\r\n\t\te.preventDefault()\r\n\t\tthis.setState({\r\n\t\t\terrMessage: \"\",\r\n\t\t\tsendErrMessage: \"\",\r\n\t\t\tsendMessage: \"\",\r\n\t\t\t...this.state,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t})\r\n\r\n\t\tif (e.target.name === \"message\") {\r\n\t\t\tif (e.target.value.split(\"\").length > 160) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\thasErr: true,\r\n\t\t\t\t\tmessageWarning: \"Message exceeded 160 characters!\",\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ messageWarning: \"\" })\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleAddContact = e => {\r\n\t\te.preventDefault()\r\n\t\tconst { contact, contacts } = this.state\r\n\t\tif (!contact) {\r\n\t\t\tthis.setState({\r\n\t\t\t\thasErr: true,\r\n\t\t\t\terrMessage: \"Enter a valid number!\",\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!/^\\+[1-9]\\d{1,14}$/g.test(contact)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\thasErr: true,\r\n\t\t\t\terrMessage: \"Enter a valid number in E.164 format eg +33609876548!\",\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (`${contact}`.length < 10) {\r\n\t\t\tthis.setState({\r\n\t\t\t\thasErr: true,\r\n\t\t\t\terrMessage: \"Enter a valid number eg 19345876765!\",\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (contacts.includes(contact)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrMessage: \"Contact already added!\",\r\n\t\t\t\thasErr: true,\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tcontacts.push(contact)\r\n\r\n\t\tthis.setState({\r\n\t\t\terrMessage: \"\",\r\n\t\t\tcontacts: [...contacts],\r\n\t\t\tcontact: \"\",\r\n\t\t\tsendMessage: \"\",\r\n\t\t})\r\n\t}\r\n\r\n\tclearContacts = () => {\r\n\t\tthis.setState({ contacts: [] })\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<main className=\"bulksms\">\r\n\t\t\t\t\t<div className=\"bulksms__container\">\r\n\t\t\t\t\t\t<BulkSMSTo\r\n\t\t\t\t\t\t\tsetModeNormal={this.setModeNormal}\r\n\t\t\t\t\t\t\tsetModeFile={this.setModeFile}\r\n\t\t\t\t\t\t\tmode={this.state.mode}\r\n\t\t\t\t\t\t\thandleAddContact={this.handleAddContact}\r\n\t\t\t\t\t\t\tcontact={this.state.contact}\r\n\t\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\t\tcontacts={this.state.contacts}\r\n\t\t\t\t\t\t\tmessage={this.state.errMessage}\r\n\t\t\t\t\t\t\thasErr={this.state.hasErr}\r\n\t\t\t\t\t\t\thandleChangeFile={this.handleChangeFile}\r\n\t\t\t\t\t\t\tfile={this.state.file}\r\n\t\t\t\t\t\t\tfileErrMessage={this.state.fileErrMessage}\r\n\t\t\t\t\t\t\textract={this.extract}\r\n\t\t\t\t\t\t\textracting={this.state.extracting}\r\n\t\t\t\t\t\t\tremoveNumber={this.removeNumber}\r\n\t\t\t\t\t\t\tclearContacts={this.clearContacts}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<BulkSMSMessage\r\n\t\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\t\tmessage={this.state.message}\r\n\t\t\t\t\t\t\terrMessage={this.state.messageWarning}\r\n\t\t\t\t\t\t\thasErr={this.state.hasErr}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"bulksms__to-total-contact-wrapper\">\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tTotal Contacts :<span>{this.state.contacts.length}</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"bulksms__senderid-wrapper\">\r\n\t\t\t\t\t\t\t<BulkSMSSenderId\r\n\t\t\t\t\t\t\t\thasErr={this.state.hasErr}\r\n\t\t\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\t\t\tsenderId={this.state.senderId}\r\n\t\t\t\t\t\t\t\tsenderErrMessage={this.state.senderErrMessage}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"bulksms__sendmessage-button\"\r\n\t\t\t\t\t\t\t\tonClick={this.sendMessage}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSEND MESSAGE\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\tclassName=\"bulksms__to-contact-message\"\r\n\t\t\t\t\t\t\tstyle={this.state.hasErr ? { color: \"#fa392b\" } : { color: \"#05c568\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{this.state.sendErrMessage}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t\t{this.state.open ? (\r\n\t\t\t\t\t<BulkSMSPopup\r\n\t\t\t\t\t\tsendingMessage={this.state.sendingMessage}\r\n\t\t\t\t\t\tsendingErr={this.state.sendingErr}\r\n\t\t\t\t\t\thandleClick={this.closePopup}\r\n\t\t\t\t\t\tloading={this.state.loading}\r\n\t\t\t\t\t\tmessageErr={this.state.messageErr}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(BulkSMS)\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return <div className=\"layout\">{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navigation\">\r\n        <Link to={\"/\"}>\r\n          <p className=\"navigation__logo-tagline\">BULK SMS SENDER</p>\r\n          <i className=\"icofont-ui-messaging\"></i>\r\n        </Link>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport BulkSMS from \"./components/BulkSMS\";\nimport Layout from \"./components/Layout\";\nimport Navigation from \"./components/Navigation\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <BrowserRouter>\n          <Layout>\n            <Navigation />\n            <BulkSMS />\n          </Layout>\n        </BrowserRouter>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./css/style.bundle.css\";\nimport \"./assets/icofont/icofont.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}